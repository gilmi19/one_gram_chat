//Задача №4 (2 балла) - OneGramChat
        //Для считывания данных вам нужен new Scanner(), вызывать readLine();
        //Создать сообщение (текст, входящее/исходящее, кому/от кого)
        //Создать Пользователя(имя, пароль, список сообщений)
        //Необходимо создать класс OneGramChat, который позволяет:
        //Создать пользователя. Имя и пароль вводится из консоли. Список сообщений пустой (размерность 100).
        //
        //Войти пользователю. Ввести имя и пароль. Если есть такой пользователь,
        //он становится текущим пользователем в системе.
        //Если нет пользователя, то будет ошибка.
        //
        //Выйти пользователю, текущий пользователь становится пустым.
        //
        //Написать письмо: Вводится имя пользователя, вводится текст письма.
        //У текущего пользователя записывается в список сообщений как исходящий
        //У пользователя которому пишем, записывается в список сообщений как входящее
        //если такого пользователя нет, то возникает ошибка: такого пользователя нет
        //если текущего пользователя нет, то возникает ошибка: вы не авторизованы
        //
        //Прочитать письма:
        //Вывести все письма текущего пользователя.
        //Формат входящего: "письмо от {имя пользователя}: {текст сообщения}"
        //Формат исходящего: "письмо к {имя пользователя}: {текст сообщения}"
        //если текущего пользователя нет, то возникает ошибка: вы не авторизованы
        //
        //Функция запуска чата:
        //чат постоянно ожидает команд из консоли:
        //"войти" - запуск функции "войти пользователю"
        //"новый" - запуск функции "создать пользователя"
        //"выйти" - запуск функции "выйти пользователю"
        //"написать" - запуск функции "написать письмо"
        //"прочитать" - запуск функции "прочитать письмо"
        //"exit" - окончание работы программы
        //Ошибки в результате работы команд должны быть обработаны, и не должны заканчивать работу программы.